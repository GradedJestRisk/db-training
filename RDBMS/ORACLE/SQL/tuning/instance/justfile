start-instance:
    docker compose up --detach --wait

create-start-instance:
    just stop-instance
    just remove-volume
    docker compose up --force-recreate --renew-anon-volumes --remove-orphans --detach --wait
    just grant

stop-instance:
    docker compose down

remove-volume:
    docker volume rm  oracle-free_oracle-volume

console:
    psql --dbname "$CONNECTION_STRING"

logs:
    docker logs --follow oracle

stats:
    docker stats

# https://jrs-s.net/2019/06/04/continuously-updated-iostat/
# to see bandwith usage (%util), add -x
# => how much time did the storage device have outstanding work (was busy).
io:
    watch -n 1 iostat -d nvme0n1 -m -y 1 1

bash:
    docker exec --interactive --tty oracle bash

sqlplus-container:
    docker exec --interactive --tty oracle bash -c "sqlplus username/password@//localhost/FREEPDB1"

sqlplus:
    sqlplus $CONNECTION_STRING @scripts/cli.sql

sqlplus-administrator:
    sqlplus $CONNECTION_STRING_ADMINISTRATOR

sqlplus-administrator-bash:
    docker exec --interactive --tty oracle bash -c "sqlplus sys/administrator_password@//localhost/FREEPDB1 as sysdba"

# one column, integer
# lasts 2 minutes, 10 million rows, 120 Mb
create-table:
    sqlplus $CONNECTION_STRING @scripts/create-table.sql

# two columns, integer and random 100-char text
# lasts 3 minutes, 10 million rows, 1,2 Gb (more than cache, 600mb)
create-table-bigger-cache:
    sqlplus $CONNECTION_STRING @scripts/create-big-table.sql

# last one second
query-table:
    sqlplus $CONNECTION_STRING @scripts/query-table.sql

# lasts one minute
query-table-many-times:
    sqlplus $CONNECTION_STRING @scripts/query-table-many-times.sql

explain:
    sqlplus $CONNECTION_STRING @scripts/explain.sql

grant:
    docker exec --interactive --tty oracle bash -c "sqlplus sys/administrator_password@//localhost/FREEPDB1 as sysdba @/tmp/scripts/grant.sql"

profile-session:
    just create-table
    rm --force ./traces/trace.txt
    sqlplus $CONNECTION_STRING_ADMINISTRATOR @scripts/profile-session.sql
    docker exec --interactive --tty $CONTAINER_NAME /tmp/scripts/process-last-trace.sh
    docker cp $CONTAINER_NAME:/tmp/trace.txt ./traces/trace.txt

trace-identifier:
    just create-table
    sqlplus $CONNECTION_STRING @scripts/profile-identifier.sql

profile-identifier:
    rm --force ./traces/trace.trc
    rm --force ./traces/tkprof/trace.txt
    rm --force ./traces/tvdxtat/trace.txt
    rm --force ./traces/tvdxtat/trace.html
    docker exec --interactive --tty $CONTAINER_NAME /tmp/scripts/process-last-trace.sh
    docker cp $CONTAINER_NAME:/tmp/trace.txt ./traces/tkprof/trace.txt
    docker exec --interactive --tty $CONTAINER_NAME /tmp/scripts/export-last-trace.sh
    docker cp $CONTAINER_NAME:/tmp/trace.trc ./traces/trace.trc
    tvdxtat --input ./traces/trace.trc --output ./traces/tvdxtat/trace.txt  --sys no --wait yes --template text
    tvdxtat --input ./traces/trace.trc --output ./traces/tvdxtat/trace.html --sys no --wait yes --template html

generate-ash:
    docker exec $CONTAINER_NAME rm -rf /tmp/report.html
    docker exec --interactive --tty oracle bash -c "sqlplus sys/administrator_password@//localhost/FREEPDB1 as sysdba @?/rdbms/admin/ashrpt.sql"

extract-ash:
    rm --force ./traces/report.html
    docker cp $CONTAINER_NAME:/tmp/report.html ./traces/report.html
    firefox ./traces/report.html

ash-top-sqls:
    docker exec --interactive --tty oracle bash -c "sqlplus sys/administrator_password@//localhost/FREEPDB1 as sysdba @/tmp/scripts/ash_top_sqls.sql 2025-01-10_00:00:00.000 2025-01-10_23:59:59.999 all all"

ash-activity:
    docker exec --interactive --tty oracle bash -c "sqlplus sys/administrator_password@//localhost/FREEPDB1 as sysdba @/tmp/scripts/ash_activity.sql all all"

ash-activity-session:
    docker exec --interactive --tty oracle bash -c "sqlplus sys/administrator_password@//localhost/FREEPDB1 as sysdba @/tmp/scripts/ash_activity.sql 206 all"

server-load:
    docker exec --interactive --tty oracle bash -c "sqlplus sys/administrator_password@//localhost/FREEPDB1 as sysdba @/tmp/scripts/host_load_hist.sql"

snapper:
    docker exec --interactive --tty oracle bash -c "sqlplus sys/administrator_password@//localhost/FREEPDB1 as sysdba @/tmp/scripts/snapper.sql ash=sql_id 15 1 all"
